--------------------------------------------------------------------------------
-- Copyright (c) 1995-2007 Xilinx, Inc.
-- All Right Reserved.
--------------------------------------------------------------------------------
--   ____  ____ 
--  /   /\/   / 
-- /___/  \  /    Vendor: Xilinx 
-- \   \   \/     Version : 9.2.04i
--  \   \         Application : ISE
--  /   /         Filename : Test1.ant
-- /___/   /\     Timestamp : Tue Nov 18 22:29:04 2008
-- \   \  /  \ 
--  \___\/\___\ 
--
--Command: 
--Design Name: Test1
--Device: Xilinx
--

library UNISIM;
use UNISIM.Vcomponents.ALL;
library ieee;
use ieee.std_logic_1164.ALL;
use ieee.numeric_std.ALL;
USE IEEE.STD_LOGIC_TEXTIO.ALL;
USE IEEE.STD_LOGIC_ARITH.ALL;
USE IEEE.STD_LOGIC_UNSIGNED.ALL;
USE STD.TEXTIO.ALL;

ENTITY Test1 IS
END Test1;

ARCHITECTURE testbench_arch OF Test1 IS
    FILE RESULTS: TEXT OPEN WRITE_MODE IS "D:\XiLinx_Projekter\BASYS_PROJECTS\EXER\EXER5xSinusGen\Sinusgen2\Test1.ano";

    COMPONENT SinusGenerator
        PORT (
            Clk : In std_logic;
            Sw0 : In std_logic;
            PPM : Out std_logic;
            UPdown : InOut std_logic
        );
    END COMPONENT;

    SIGNAL Clk : std_logic := '0';
    SIGNAL Sw0 : std_logic := '0';
    SIGNAL PPM : std_logic := '0';
    SIGNAL UPdown : std_logic := 'Z';

    SHARED VARIABLE TX_ERROR : INTEGER := 0;
    SHARED VARIABLE TX_OUT : LINE;

    constant PERIOD : time := 20 ns;
    constant DUTY_CYCLE : real := 0.5;
    constant OFFSET : time := 100 ns;

    BEGIN
        UUT : SinusGenerator
        PORT MAP (
            Clk => Clk,
            Sw0 => Sw0,
            PPM => PPM,
            UPdown => UPdown
        );

        PROCESS    -- clock process for Clk
        BEGIN
            WAIT for OFFSET;
            CLOCK_LOOP : LOOP
                Clk <= '0';
                WAIT FOR (PERIOD - (PERIOD * DUTY_CYCLE));
                Clk <= '1';
                WAIT FOR (PERIOD * DUTY_CYCLE);
            END LOOP CLOCK_LOOP;
        END PROCESS;

        PROCESS    -- Annotation process for Clk
            VARIABLE TX_TIME : INTEGER := 0;

            PROCEDURE ANNOTATE_PPM(
                TX_TIME : INTEGER
            ) IS
                VARIABLE TX_STR : String(1 to 4096);
                VARIABLE TX_LOC : LINE;
            BEGIN
                STD.TEXTIO.write(TX_LOC, string'("Annotate["));
                STD.TEXTIO.write(TX_LOC, TX_TIME);
                STD.TEXTIO.write(TX_LOC, string'(", PPM, "));
                IEEE.STD_LOGIC_TEXTIO.write(TX_LOC, PPM);
                STD.TEXTIO.write(TX_LOC, string'("]"));
                TX_STR(TX_LOC.all'range) := TX_LOC.all;
                STD.TEXTIO.writeline(RESULTS, TX_LOC);
                STD.TEXTIO.Deallocate(TX_LOC);
            END;
        BEGIN
            WAIT for 1 fs;
            ANNOTATE_PPM(0);
            WAIT for OFFSET;
            TX_TIME := TX_TIME + 100;
            ANNO_LOOP : LOOP
                --Rising Edge
                WAIT for 15 ns;
                TX_TIME := TX_TIME + 15;
                ANNOTATE_PPM(TX_TIME);
                WAIT for 5 ns;
                TX_TIME := TX_TIME + 5;
            END LOOP ANNO_LOOP;
        END PROCESS;

        PROCESS
            BEGIN
                -- -------------  Current Time:  105ns
                WAIT FOR 105 ns;
                Sw0 <= '1';
                -- -------------------------------------
                WAIT FOR 14915 ns;

                STD.TEXTIO.write(TX_OUT, string'("Total[]"));
                STD.TEXTIO.writeline(RESULTS, TX_OUT);
                ASSERT (FALSE) REPORT
                    "Success! Simulation for annotation completed"
                    SEVERITY FAILURE;
            END PROCESS;

    END testbench_arch;

